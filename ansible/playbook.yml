---
---
- hosts: all
  gather_facts: False

  tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- hosts: crimenmexico
  vars:
    nodejs_nodesource_pin_priority: 500
    r_repository:
      - type: deb
        url: "http://cran.rstudio.com/bin/linux/ubuntu  {{ ansible_distribution_release }}/"

  tasks:

    - name: apt-get update
      raw: apt-get update -qq

    # needed for installing hashlib
    - file: path=/usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so state=absent

    - name: Add R repository public key
      apt_key:
        id: E084DAB9
        keyserver: keyserver.ubuntu.com
        state: present
      tags:
        - r-repository-public-key

    - name: Add R repository
      apt_repository:
        repo: "{{ item.type }} {{ item.url }}"
        state: present
        update_cache: true
      with_items: "{{ r_repository }}"
      tags:
        - r-repository-add

    - name: Update distro
      apt: upgrade=dist update_cache=yes

    - name: Spanish locale
      locale_gen: name=es_ES.UTF-8 state=present

    - name: Remove Packages
      apt: name="{{ item }}" state=absent
      with_items:
        - apache
        - samba
        - sendmail
        - bind9
        - ncsd
        - sasl
        - exim
        - ntp

    - name: Install Packages
      apt: name="{{ item }}" state=latest
      with_items:
        - git
        - r-base
        - r-base-dev
        - curl
        - libreoffice
        - python-virtualenv
        - python-dev
        - libcurl4-openssl-dev
        - sqlite3
        - libxml2-dev
        - r-cran-xml
        - libgdal1-dev
        - libproj-dev
        - imagemagick
        - optipng
        - htop
        - gdal-bin
        - apt-transport-https

    - name: Creates .Rprofile with default repo
      lineinfile: dest=/root/.Rprofile line='local({r <- getOption("repos");r["CRAN"] <- "http://cran.cnr.berkeley.edu/";options(repos = r)})' create=True

    - name: Clone repo new.crimenmexico
      git: repo=https://github.com/diegovalle/new.crimenmexico dest=/root/new.crimenmexico

    - name: Install fonts
      command: find /root/new.crimenmexico/R/fonts/ -type f -name '*.ttf' -print -exec cp {} /usr/share/fonts/truetype/ \;

    - name: Refresh Font cache
      command: fc-cache -f -v

    - name: Creates tabula-java directory
      file: path=/root/new.crimenmexico/downloader/tabula-java state=directory

    - name: download tabula-java
      get_url: url=https://github.com/tabulapdf/tabula-java/releases/download/tabula-0.9.0/tabula-0.9.0-SNAPSHOT-jar-with-dependencies.jar dest=/root/new.crimenmexico/downloader/tabula-java

    - name: Create the initial virtualenv
      command: virtualenv /root/.virtualenvs/crimenmexico/ -p python2 creates="/home/root/.virtualenvs/crimenmexico/"

    - name: Install requirements.txt into virtualenv
      pip:
        requirements=/root/new.crimenmexico/requirements.txt
        virtualenv=/root/.virtualenvs/crimenmexico/

    - name: Add R packages
      command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "if (! ('{{item}}' %in% installed.packages()[,'Package'])) install.packages(pkgs='{{item}}')"
      with_items:
        - pacman
        - devtools
        - dplyr
        - ggplot2
        - rgeos
        - magrittr
        - RSQLite
        - zoo
        - lubridate
        - stringr
        - grid
        - Rttf2pt1
        - extrafont
        - useful
        - rgdal
        - maptools
        - gpclib
        - raster
        - scales
        - jsonlite
        - hash
        - RColorBrewer
        - compiler
        - data.table
        - mgcv
        - tidyr
        - future

    - apt_repository:
        repo: "{{item}}"
      register: multiverse_installed
      when: ansible_distribution == 'Ubuntu'
      with_items:
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'

    - apt: name="{{ item }}" state=latest
      with_items:
        - libfreetype6
        - libfreetype6-dev
        - libfontconfig

    - name: Accept License
      shell: 'echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections'
    - apt: pkg=ttf-mscorefonts-installer

    - name: Update distro
      apt: upgrade=dist update_cache=yes

    - name: Import fonts into R
      command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "extrafont::font_import()"

    - name: Install github R packages
      command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "devtools::install_github('{{item}}')"
      with_items:
        - diegovalle/mxmortalitydb
        - twitter/AnomalyDetection
        - diegovalle/mxmaps

    - name: Import the NodeSource GPG key into apt
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Add NodeSource deb repository
      apt_repository:
        repo: 'deb https://deb.nodesource.com/node_4.x {{ ansible_distribution_release }} main'
        state: present

    - name: Add NodeSource deb-src repository
      apt_repository:
        repo: 'deb-src https://deb.nodesource.com/node_4.x {{ ansible_distribution_release }} main'
        state: present

    - name: Add NodeSource repository preferences
      template:
        src: deb_nodesource_com_node.pref.2
        dest: /etc/apt/preferences.d/deb_nodesource_com_node.pref

    - name: Install Node.js
      apt:
        pkg:
          - nodejs
        state: installed
        update_cache: yes

    - name: Install phantomjs
      npm: name=phantomjs-prebuilt global=yes

    - name: Install casperjs
      npm:  name=casperjs global=yes

    - name: Install simplehttpserver
      npm:  name=simplehttpserver global=yes
